use sustainable_clothing;

select * from transactions;
select * from marketing_campaigns;
select * from sustainable_clothing;

# 1. How many transactions were completed during each marketing campaign?

select campaign_name , count(transaction_id) as transactions_count
from transactions as t join marketing_campaigns mc
on t.purchase_date
between mc.start_date and mc.end_date
group by campaign_name;

# 2. Which product had the highest sales quantity?

select product_name , sum(quantity) as sales_quantity
from sustainable_clothing as sc join transactions as t
on sc.product_id = t.product_id
group by product_name
order by sales_quantity desc
limit 1;

# 3. What is the total revenue generated from each marketing campaign?

with table1 as(
select campaign_name , product_name , price , quantity , round((price * quantity),2) as amount 
from transactions as t join sustainable_clothing as sc
on t.product_id = sc.product_id
join marketing_campaigns as mc
on t.purchase_date between mc.start_date and mc.end_date)
select campaign_name , round(sum(amount),2) as total_revenue
from table1 
group by campaign_name;

# 4. What is the top-selling product category based on the total revenue generated?

with table1 as(
select category , price , quantity , round((price * quantity),2) as amount 
from transactions as t join sustainable_clothing as sc
on t.product_id = sc.product_id)
select category , sum(amount) as total_sales
from table1 
group by category
order by total_sales desc
limit 1;

# 5. Which products had a higher quantity sold compared to the average quantity sold?

with table2 as(
with table1 as(
select product_name, sum(quantity) as quantity_sold 
from transactions as t join sustainable_clothing as sc
on t.product_id = sc.product_id
group by product_name
order by quantity_sold desc)
select *, round(avg(quantity_sold) over()) as avg_quantity from table1)
select product_name
from table2 
where quantity_sold > avg_quantity;

# 6. What is the average revenue generated per day during the marketing campaigns?

with table1 as(
select campaign_name , product_name ,quantity , price ,purchase_date , round((quantity * price),2) as amount
from transactions as t join marketing_campaigns as mc
on t.purchase_date between mc.start_date and mc.end_date
join sustainable_clothing as sc
on mc.product_id = sc.product_id)
select distinct purchase_date , round(avg(amount) over(partition by purchase_date),2) as per_day_sales
from table1
order by purchase_date asc;

# 7. What is the percentage contribution of each product to the total revenue?

with table2 as(
with table1 as(
select product_name , price , quantity , round((price * quantity),2) as amount 
from sustainable_clothing as sc join transactions as t
on t.product_id = sc.product_id)
select *, round(sum(amount) over(),2) as total_revenue
from table1)
select product_name , round(sum(round(((amount / total_revenue) * 100),2)),2) as percentage_contribution
from table2
group by product_name
order by percentage_contribution desc;

# 8. Compare the average quantity sold during marketing campaigns to outside the marketing campaigns

with table1 as(
select avg(quantity) as total_quantity_sold 
from transactions as t),

table2 as(
select avg(quantity) as avg_quantity_inside_campaign
from transactions as t join marketing_campaigns as mc
on t.purchase_date between mc.start_date and mc.end_date)

select total_quantity_sold , avg_quantity_inside_campaign , (total_quantity_sold - avg_quantity_inside_campaign) as avg_quantity_outside_campaign
from table1 , table2;

# 9. Compare the revenue generated by products inside the marketing campaigns to outside the campaigns

with table1 as(
select round(sum(round((price * quantity),2)),2) as total_revenue 
from transactions as t join sustainable_clothing as sc
on t.product_id = sc.product_id),

table2 as(
select round(sum(round((price * quantity),2)),2) as revenue_inside_campaign
from transactions as t join sustainable_clothing as sc
on t.product_id = sc.product_id
join marketing_campaigns as mc 
on t.purchase_date between mc.start_date and mc.end_date)

select total_revenue ,revenue_inside_campaign , (total_revenue - revenue_inside_campaign) as revenue_outside_campaign
from table1 , table2;


# 10. Rank the products by their average daily quantity sold

with table2 as(
with table1 as(
select product_name , quantity , purchase_date , sum(quantity) over(partition by purchase_date) as pd_qty
from transactions as t join sustainable_clothing as sc
on t.product_id = sc.product_id)
select distinct product_name , round(avg(pd_qty) over(partition by product_name)) as average_daily_quantity
from table1)
select * , dense_rank() over(order by average_Daily_quantity desc) as ranking
from table2;
